import * as _nextui_org_system from '@nextui-org/system';
import * as react_jsx_runtime from 'react/jsx-runtime';
import * as _nextui_org_shared_icons from '@nextui-org/shared-icons';
import { UseAlertProps } from './use-alert.js';
import 'react';
import '@nextui-org/button';
import '@nextui-org/theme';
import '@nextui-org/react-utils';

declare const iconMap: {
    readonly primary: (props: _nextui_org_shared_icons.IconSvgProps & {
        className?: string | undefined;
    }) => react_jsx_runtime.JSX.Element;
    readonly secondary: (props: _nextui_org_shared_icons.IconSvgProps & {
        className?: string | undefined;
    }) => react_jsx_runtime.JSX.Element;
    readonly success: (props: _nextui_org_shared_icons.IconSvgProps & {
        className?: string | undefined;
    }) => react_jsx_runtime.JSX.Element;
    readonly warning: (props: _nextui_org_shared_icons.IconSvgProps & {
        className?: string | undefined;
    }) => react_jsx_runtime.JSX.Element;
    readonly danger: (props: _nextui_org_shared_icons.IconSvgProps & {
        className?: string | undefined;
    }) => react_jsx_runtime.JSX.Element;
};
type AlertColor = keyof typeof iconMap;
interface AlertProps extends Omit<UseAlertProps, "hasContent"> {
}
declare const Alert: _nextui_org_system.InternalForwardRefRenderFunction<"div", AlertProps, never>;

export { AlertColor, AlertProps, Alert as default };
